name: ci-cd

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/hello-flask

jobs:
  test-build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps & run tests
        run: |
          pip install -r requirements.txt
          pytest -q

      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SHORT_SHA }}

      - name: Write kubeconfig
        if: ${{ secrets.KUBE_CONFIG != '' }}
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBE_CONFIG" | base64 -d > kubeconfig

      - name: Install kubectl
        if: ${{ secrets.KUBE_CONFIG != '' }}
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Deploy to Kubernetes
        if: ${{ secrets.KUBE_CONFIG != '' }}
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
          IMAGE: ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SHORT_SHA }}
        run: |
          sed -i "s#your-dockerhub-username#${{ secrets.DOCKERHUB_USERNAME }}#g" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl set image deployment/hello-flask hello-flask=$IMAGE
          kubectl rollout status deployment/hello-flask --timeout=120s
